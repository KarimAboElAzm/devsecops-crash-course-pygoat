name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: read

jobs:

  semgrep:
    # User definable name of this GitHub Actions job.
    name: semgrep/ci
    # If you are self-hosting, change the following `runs-on` value:
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep


    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout. Use either v3 or v4.
      - uses: actions/checkout@v4
      # Run the "semgrep ci" command on the command line of the docker image.
      - run: semgrep scan --config auto
  sast_scan:
    name: Run Bandit Scan
    runs-on: ubuntu-latest
    needs: semgrep
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
 
    - name: Install Bandit
      run: pip install bandit
 
    - name: Run Bandit Scan
      run: bandit -ll -ii -r . -f json -o bandit-report.json
      continue-on-error: true
 
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
       name: bandit-findings
       path: bandit-report.json

  image_scan:
    name: Build Image and Run Image Scan
    runs-on: ubuntu-latest
    needs: sast_scan
 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
 
    - name: Set up Docker
      uses: docker-practice/actions-setup-docker@v1
 
    - name: Build Docker Image
      run: docker build -f Dockerfile -t myapp:latest .
 
    # - name: Docker Scout Scan
      # run: |
        # curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
        # sh install-scout.sh
        # echo ${{ secrets.REPO_PWD }} | docker login -u ${{ secrets.REPO_USER }} --password-stdin
        # docker scout quickview
        # docker scout cves
 
    - name: Docker Scout Scan
      uses: docker/scout-action@v1.0.9
      with:
        dockerhub-user: ${{ secrets.REPO_USER }}
        dockerhub-password: ${{ secrets.REPO_PWD }}
        command: quickview,cves
        only-severities: critical,high
        sarif-file: scout-report.sarif
 
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: docker-scout-findings
        path: scout-report.sarif